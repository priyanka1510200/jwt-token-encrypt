{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../login.service\";\nexport class LoginComponent {\n  constructor(loginService) {\n    this.loginService = loginService;\n    this.username = \"\";\n    this.password = \"\";\n  }\n  ngOnInit() {}\n  login() {\n    this.loginService.login(this.username, this.password).subscribe({\n      next: () => {\n        // Navigate to dashboard or home page upon successful login\n      },\n      error: err => {\n        console.error('Login error:', err);\n        // Handle login error (e.g., display error message)\n      }\n    });\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.LoginService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 2,\n    vars: 0,\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"login works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["LoginComponent","constructor","loginService","username","password","ngOnInit","login","subscribe","next","error","err","console","_","i0","ɵɵdirectiveInject","i1","LoginService","_2","selectors","decls","vars","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["/home/devmonk--/thime/Frontend/src/app/login/login.component.ts","/home/devmonk--/thime/Frontend/src/app/login/login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { LoginService } from '../login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html', \n})\nexport class LoginComponent implements OnInit {\n  username: string = \"\";\n  password: string = \"\";\n  constructor(private loginService: LoginService) { } \n\n  ngOnInit(): void {\n    \n  }\n\n  login(): void {\n    this.loginService.login(this.username, this.password).subscribe({\n      next: () => {\n        // Navigate to dashboard or home page upon successful login\n      },\n      error: (err) => {\n        console.error('Login error:', err);\n        // Handle login error (e.g., display error message)\n      }\n    });\n  }\n}\n","<p>login works!</p>\n"],"mappings":";;AAOA,OAAM,MAAOA,cAAc;EAGzBC,YAAoBC,YAA0B;IAA1B,KAAAA,YAAY,GAAZA,YAAY;IAFhC,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,QAAQ,GAAW,EAAE;EAC6B;EAElDC,QAAQA,CAAA,GAER;EAEAC,KAAKA,CAAA;IACH,IAAI,CAACJ,YAAY,CAACI,KAAK,CAAC,IAAI,CAACH,QAAQ,EAAE,IAAI,CAACC,QAAQ,CAAC,CAACG,SAAS,CAAC;MAC9DC,IAAI,EAAEA,CAAA,KAAK;QACT;MAAA,CACD;MACDC,KAAK,EAAGC,GAAG,IAAI;QACbC,OAAO,CAACF,KAAK,CAAC,cAAc,EAAEC,GAAG,CAAC;QAClC;MACF;KACD,CAAC;EACJ;EAAC,QAAAE,CAAA,G;qBAnBUZ,cAAc,EAAAa,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,YAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAdjB,cAAc;IAAAkB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCP3BV,EAAA,CAAAY,cAAA,QAAG;QAAAZ,EAAA,CAAAa,MAAA,mBAAY;QAAAb,EAAA,CAAAc,YAAA,EAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}