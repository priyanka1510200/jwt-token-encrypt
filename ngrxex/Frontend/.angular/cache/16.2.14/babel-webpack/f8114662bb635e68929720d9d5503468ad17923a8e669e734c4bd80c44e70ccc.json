{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport * as AuthActions from './auth.actions';\nexport const initialState = {\n  token: localStorage.getItem('authToken')\n};\nexport const authReducer = createReducer(initialState, on(AuthActions.loginSuccess, (state, {\n  token\n}) => {\n  localStorage.setItem('authToken', token);\n  return {\n    ...state,\n    token\n  };\n}), on(AuthActions.logout, state => {\n  localStorage.removeItem('authToken');\n  return {\n    ...state,\n    token: null\n  };\n}));","map":{"version":3,"names":["createReducer","on","AuthActions","initialState","token","localStorage","getItem","authReducer","loginSuccess","state","setItem","logout","removeItem"],"sources":["/home/devmonk--/thime/ngrxex/Frontend/src/app/store/auth/auth.reducer.ts"],"sourcesContent":["import { createReducer, on } from '@ngrx/store';\nimport * as AuthActions from './auth.actions';\n\nexport interface AuthState {\n  token: string | null;\n}\n\nexport const initialState: AuthState = {\n  token: localStorage.getItem('authToken')\n};\n\nexport const authReducer = createReducer(\n  initialState,\n  on(AuthActions.loginSuccess, (state, { token }) => {\n    localStorage.setItem('authToken', token);\n    return { ...state, token };\n  }),\n  \n  on(AuthActions.logout, state => { \n    localStorage.removeItem('authToken');\n    return { ...state, token: null };\n  })\n);\n"],"mappings":"AAAA,SAASA,aAAa,EAAEC,EAAE,QAAQ,aAAa;AAC/C,OAAO,KAAKC,WAAW,MAAM,gBAAgB;AAM7C,OAAO,MAAMC,YAAY,GAAc;EACrCC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,WAAW;CACxC;AAED,OAAO,MAAMC,WAAW,GAAGP,aAAa,CACtCG,YAAY,EACZF,EAAE,CAACC,WAAW,CAACM,YAAY,EAAE,CAACC,KAAK,EAAE;EAAEL;AAAK,CAAE,KAAI;EAChDC,YAAY,CAACK,OAAO,CAAC,WAAW,EAAEN,KAAK,CAAC;EACxC,OAAO;IAAE,GAAGK,KAAK;IAAEL;EAAK,CAAE;AAC5B,CAAC,CAAC,EAEFH,EAAE,CAACC,WAAW,CAACS,MAAM,EAAEF,KAAK,IAAG;EAC7BJ,YAAY,CAACO,UAAU,CAAC,WAAW,CAAC;EACpC,OAAO;IAAE,GAAGH,KAAK;IAAEL,KAAK,EAAE;EAAI,CAAE;AAClC,CAAC,CAAC,CACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}