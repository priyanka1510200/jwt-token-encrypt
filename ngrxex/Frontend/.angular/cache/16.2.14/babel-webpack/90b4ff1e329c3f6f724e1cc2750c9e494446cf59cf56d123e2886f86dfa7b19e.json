{"ast":null,"code":"import { tap } from 'rxjs/operators';\nimport * as AuthActions from './store/auth/auth.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@ngrx/store\";\nexport class LoginService {\n  constructor(http, store) {\n    this.http = http;\n    this.store = store;\n    this.apiUrl = 'http://localhost:3000/api/auth';\n    this.localStorageKey = 'authToken';\n  }\n  login(username, password) {\n    return this.http.post(`${this.apiUrl}/login`, {\n      username,\n      password\n    }).pipe(tap(response => {\n      this.store.dispatch(AuthActions.login({\n        token: response.token\n      }));\n    }));\n  }\n  register(username, password, email) {\n    return this.http.post(`${this.apiUrl}/register`, {\n      username,\n      password,\n      email\n    });\n  }\n  logout() {\n    this.store.dispatch(AuthActions.logout());\n  }\n  getToken() {\n    return localStorage.getItem(this.localStorageKey);\n  }\n  isAuthenticated() {\n    const token = this.getToken();\n    return !!token;\n  }\n  static #_ = this.ɵfac = function LoginService_Factory(t) {\n    return new (t || LoginService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Store));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoginService,\n    factory: LoginService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["tap","AuthActions","LoginService","constructor","http","store","apiUrl","localStorageKey","login","username","password","post","pipe","response","dispatch","token","register","email","logout","getToken","localStorage","getItem","isAuthenticated","_","i0","ɵɵinject","i1","HttpClient","i2","Store","_2","factory","ɵfac","providedIn"],"sources":["/home/devmonk--/thime/ngrxex/Frontend/src/app/login.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { AuthState } from './store/auth/auth.reducer';\nimport * as AuthActions from './store/auth/auth.actions';\nimport { Store } from '@ngrx/store';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  private apiUrl = 'http://localhost:3000/api/auth';\n  private localStorageKey = 'authToken';\n\n  constructor(private http: HttpClient, private store: Store<AuthState>) {}\n\n  login(username: string, password: string): Observable<{ token: string }> {\n    return this.http.post<{ token: string }>(`${this.apiUrl}/login`, { username, password }).pipe(\n      tap(response => {\n        this.store.dispatch(AuthActions.login({ token: response.token }));\n      })\n    );\n  }\n\n\n  register(username: string, password: string, email: string): Observable<{ message: string }> {\n    return this.http.post<{ message: string }>(`${this.apiUrl}/register`, { username, password, email });\n  }\n\n\n  logout(): void {\n    this.store.dispatch(AuthActions.logout());\n  }\n\n  getToken(): string | null {\n    return localStorage.getItem(this.localStorageKey);\n  }\n\n  isAuthenticated(): boolean {\n    const token = this.getToken();\n    return !!token;\n  }\n}\n"],"mappings":"AAEA,SAASA,GAAG,QAAQ,gBAAgB;AAGpC,OAAO,KAAKC,WAAW,MAAM,2BAA2B;;;;AAMxD,OAAM,MAAOC,YAAY;EAKvBC,YAAoBC,IAAgB,EAAUC,KAAuB;IAAjD,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,KAAK,GAALA,KAAK;IAH3C,KAAAC,MAAM,GAAG,gCAAgC;IACzC,KAAAC,eAAe,GAAG,WAAW;EAEmC;EAExEC,KAAKA,CAACC,QAAgB,EAAEC,QAAgB;IACtC,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAoB,GAAG,IAAI,CAACL,MAAM,QAAQ,EAAE;MAAEG,QAAQ;MAAEC;IAAQ,CAAE,CAAC,CAACE,IAAI,CAC3FZ,GAAG,CAACa,QAAQ,IAAG;MACb,IAAI,CAACR,KAAK,CAACS,QAAQ,CAACb,WAAW,CAACO,KAAK,CAAC;QAAEO,KAAK,EAAEF,QAAQ,CAACE;MAAK,CAAE,CAAC,CAAC;IACnE,CAAC,CAAC,CACH;EACH;EAGAC,QAAQA,CAACP,QAAgB,EAAEC,QAAgB,EAAEO,KAAa;IACxD,OAAO,IAAI,CAACb,IAAI,CAACO,IAAI,CAAsB,GAAG,IAAI,CAACL,MAAM,WAAW,EAAE;MAAEG,QAAQ;MAAEC,QAAQ;MAAEO;IAAK,CAAE,CAAC;EACtG;EAGAC,MAAMA,CAAA;IACJ,IAAI,CAACb,KAAK,CAACS,QAAQ,CAACb,WAAW,CAACiB,MAAM,EAAE,CAAC;EAC3C;EAEAC,QAAQA,CAAA;IACN,OAAOC,YAAY,CAACC,OAAO,CAAC,IAAI,CAACd,eAAe,CAAC;EACnD;EAEAe,eAAeA,CAAA;IACb,MAAMP,KAAK,GAAG,IAAI,CAACI,QAAQ,EAAE;IAC7B,OAAO,CAAC,CAACJ,KAAK;EAChB;EAAC,QAAAQ,CAAA,G;qBAhCUrB,YAAY,EAAAsB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,KAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZ5B,YAAY;IAAA6B,OAAA,EAAZ7B,YAAY,CAAA8B,IAAA;IAAAC,UAAA,EAFX;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}