{"ast":null,"code":"import { createEffect, ofType } from '@ngrx/effects';\nimport { of } from 'rxjs';\nimport { catchError, map, mergeMap } from 'rxjs/operators';\nimport * as AuthActions from './auth.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"src/app/login.service\";\nexport class AuthEffects {\n  constructor(actions$, authService) {\n    this.actions$ = actions$;\n    this.authService = authService;\n    this.login$ = createEffect(() => this.actions$.pipe(ofType(AuthActions.login), mergeMap(action => this.authService.login(action.username, action.password).pipe(map(response => AuthActions.login({\n      token: response.token\n    })), catchError(() => of(AuthActions.logout()))))));\n  }\n  static #_ = this.ɵfac = function AuthEffects_Factory(t) {\n    return new (t || AuthEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.LoginService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthEffects,\n    factory: AuthEffects.ɵfac\n  });\n}","map":{"version":3,"names":["createEffect","ofType","of","catchError","map","mergeMap","AuthActions","AuthEffects","constructor","actions$","authService","login$","pipe","login","action","username","password","response","token","logout","_","i0","ɵɵinject","i1","Actions","i2","LoginService","_2","factory","ɵfac"],"sources":["/home/devmonk--/thime/ngrxex/Frontend/src/app/store/auth/auth.effects.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { of } from 'rxjs';\nimport { catchError, map, mergeMap } from 'rxjs/operators';\nimport { LoginService } from 'src/app/login.service';\nimport * as AuthActions from './auth.actions';\n\n@Injectable()\nexport class AuthEffects {\n  login$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AuthActions.login),\n      mergeMap(action =>\n        this.authService.login(action.username, action.password).pipe(\n          map(response => AuthActions.login({ token: response.token })),\n          catchError(() => of(AuthActions.logout()))\n        )\n      )\n    )\n  );\n\n  constructor(private actions$: Actions, private authService: LoginService) {}\n}\n"],"mappings":"AACA,SAAkBA,YAAY,EAAEC,MAAM,QAAQ,eAAe;AAC7D,SAASC,EAAE,QAAQ,MAAM;AACzB,SAASC,UAAU,EAAEC,GAAG,EAAEC,QAAQ,QAAQ,gBAAgB;AAE1D,OAAO,KAAKC,WAAW,MAAM,gBAAgB;;;;AAG7C,OAAM,MAAOC,WAAW;EAatBC,YAAoBC,QAAiB,EAAUC,WAAyB;IAApD,KAAAD,QAAQ,GAARA,QAAQ;IAAmB,KAAAC,WAAW,GAAXA,WAAW;IAZ1D,KAAAC,MAAM,GAAGX,YAAY,CAAC,MACpB,IAAI,CAACS,QAAQ,CAACG,IAAI,CAChBX,MAAM,CAACK,WAAW,CAACO,KAAK,CAAC,EACzBR,QAAQ,CAACS,MAAM,IACb,IAAI,CAACJ,WAAW,CAACG,KAAK,CAACC,MAAM,CAACC,QAAQ,EAAED,MAAM,CAACE,QAAQ,CAAC,CAACJ,IAAI,CAC3DR,GAAG,CAACa,QAAQ,IAAIX,WAAW,CAACO,KAAK,CAAC;MAAEK,KAAK,EAAED,QAAQ,CAACC;IAAK,CAAE,CAAC,CAAC,EAC7Df,UAAU,CAAC,MAAMD,EAAE,CAACI,WAAW,CAACa,MAAM,EAAE,CAAC,CAAC,CAC3C,CACF,CACF,CACF;EAE0E;EAAC,QAAAC,CAAA,G;qBAbjEb,WAAW,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,OAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,YAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXpB,WAAW;IAAAqB,OAAA,EAAXrB,WAAW,CAAAsB;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}