{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../login.service\";\nimport * as i2 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(loginService) {\n    this.loginService = loginService;\n  }\n  ngOnInit() {}\n  onSubmit() {\n    this.loginService.login(this.username, this.password).subscribe(response => {\n      console.log(response);\n    });\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.LoginService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 11,\n    vars: 2,\n    consts: [[3, \"ngSubmit\"], [\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"label\");\n        i0.ɵɵtext(2, \"Username:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_3_listener($event) {\n          return ctx.username = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"br\");\n        i0.ɵɵelementStart(5, \"label\");\n        i0.ɵɵtext(6, \"Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.password = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"br\");\n        i0.ɵɵelementStart(9, \"button\", 3);\n        i0.ɵɵtext(10, \"Login\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.username);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.password);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm],\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["LoginComponent","constructor","loginService","ngOnInit","onSubmit","login","username","password","subscribe","response","console","log","_","i0","ɵɵdirectiveInject","i1","LoginService","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","LoginComponent_Template_form_ngSubmit_0_listener","ɵɵtext","ɵɵelementEnd","LoginComponent_Template_input_ngModelChange_3_listener","$event","ɵɵelement","LoginComponent_Template_input_ngModelChange_7_listener","ɵɵadvance","ɵɵproperty"],"sources":["/home/devmonk--/thime/Frontend/src/app/login/login.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { LoginService } from '../login.service';\n\n@Component({\n  selector: 'app-login',\n  template: `\n    <form (ngSubmit)=\"onSubmit()\">\n      <label>Username:</label>\n      <input type=\"text\" [(ngModel)]=\"username\">\n      <br>\n      <label>Password:</label>\n      <input type=\"password\" [(ngModel)]=\"password\">\n      <br>\n      <button type=\"submit\">Login</button>\n    </form>\n  `\n})\nexport class LoginComponent implements OnInit {\n\n  username: string;\n  password: string;\n\n  constructor(private loginService: LoginService) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit() {\n    this.loginService.login(this.username, this.password).subscribe(response => {\n      console.log(response);\n    });\n  }\n\n}"],"mappings":";;;AAiBA,OAAM,MAAOA,cAAc;EAKzBC,YAAoBC,YAA0B;IAA1B,KAAAA,YAAY,GAAZA,YAAY;EAAkB;EAElDC,QAAQA,CAAA,GACR;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACF,YAAY,CAACG,KAAK,CAAC,IAAI,CAACC,QAAQ,EAAE,IAAI,CAACC,QAAQ,CAAC,CAACC,SAAS,CAACC,QAAQ,IAAG;MACzEC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACvB,CAAC,CAAC;EACJ;EAAC,QAAAG,CAAA,G;qBAdUZ,cAAc,EAAAa,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,YAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAdjB,cAAc;IAAAkB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QAXvBX,EAAA,CAAAa,cAAA,cAA8B;QAAxBb,EAAA,CAAAc,UAAA,sBAAAC,iDAAA;UAAA,OAAYH,GAAA,CAAArB,QAAA,EAAU;QAAA,EAAC;QAC3BS,EAAA,CAAAa,cAAA,YAAO;QAAAb,EAAA,CAAAgB,MAAA,gBAAS;QAAAhB,EAAA,CAAAiB,YAAA,EAAQ;QACxBjB,EAAA,CAAAa,cAAA,eAA0C;QAAvBb,EAAA,CAAAc,UAAA,2BAAAI,uDAAAC,MAAA;UAAA,OAAAP,GAAA,CAAAnB,QAAA,GAAA0B,MAAA;QAAA,EAAsB;QAAzCnB,EAAA,CAAAiB,YAAA,EAA0C;QAC1CjB,EAAA,CAAAoB,SAAA,SAAI;QACJpB,EAAA,CAAAa,cAAA,YAAO;QAAAb,EAAA,CAAAgB,MAAA,gBAAS;QAAAhB,EAAA,CAAAiB,YAAA,EAAQ;QACxBjB,EAAA,CAAAa,cAAA,eAA8C;QAAvBb,EAAA,CAAAc,UAAA,2BAAAO,uDAAAF,MAAA;UAAA,OAAAP,GAAA,CAAAlB,QAAA,GAAAyB,MAAA;QAAA,EAAsB;QAA7CnB,EAAA,CAAAiB,YAAA,EAA8C;QAC9CjB,EAAA,CAAAoB,SAAA,SAAI;QACJpB,EAAA,CAAAa,cAAA,gBAAsB;QAAAb,EAAA,CAAAgB,MAAA,aAAK;QAAAhB,EAAA,CAAAiB,YAAA,EAAS;;;QALjBjB,EAAA,CAAAsB,SAAA,GAAsB;QAAtBtB,EAAA,CAAAuB,UAAA,YAAAX,GAAA,CAAAnB,QAAA,CAAsB;QAGlBO,EAAA,CAAAsB,SAAA,GAAsB;QAAtBtB,EAAA,CAAAuB,UAAA,YAAAX,GAAA,CAAAlB,QAAA,CAAsB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}